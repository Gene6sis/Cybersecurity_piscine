#!/usr/bin/env python3

import argparse

def generate_key(file_name: str):
    """Generate a key from a file."""
    with open(file_name, 'rb') as file:
        content = file.read()
        if len(content) < 64:
            raise Exception("Key file must have at least 64 characters.")
        if not all(c in "0123456789abcdefABCDEF" for c in content):
            raise Exception("Key file must contain only hexadecimal characters.")
        with open("ft_otp.key", 'wb') as key_file:
            key_file.write(bytes.fromhex(content))
        


def main():
    parser = argparse.ArgumentParser(description="Spider program to download images from a website.", add_help=False)
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-g", type=str, help="Hexadecimal key of at least 64 characters")
    group.add_argument("-k", action='store_true', help="Maximum depth for recursive download (default: 5).")
    args = parser.parse_args()
    
    try:
        if args.g:
            generate_key(args.g)
        elif args.k:
            print("Key is true")
    except Exception as e:
        print(f"./ft_otp: error: {e}")
    

if __name__ == "__main__":
    main()